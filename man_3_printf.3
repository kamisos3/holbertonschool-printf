PRINTF(3) library Function Manual
TH MAN_3_PRINTF 3-03-2025"
.SH NAME
_printf \- Implementation of printf function.
.SH SYNOPSIS
#include <stdio.h>
int _printf(const char*format, ...);
.SH DESCRIPTION
The '_printf()' function writes output to 'stdout' under the control of a
format string that specifies how subsequent arguments are converted for
output.
.PP
The format string is composed of zero or more directives: ordinary
characters (except '%'), which are copied unchanged to the output stream;
and conversion specifications, each of which results in fetching zero or
more subsequent arguments.

.SH FUNCTION PROTOTYPES
.TP
.B int _printf(const char *format, ...);
.br
Formats and prints data according to the specified format string.
.TO
.B int print string(const char *str);
.br
Prints a string to the standard output.
.TP
.B int _putchar(char c)
.br
Writes a single character to the standard output
.TP
.B int handle_format(char format, va_list args);
.br
Handles the percent sign in the format string.
.TP
.B int print_number(int num).
.br
Prints an integer to the standard output.
The conversion specifications supported by '_printf()' are:
.SH CONVERSION SPECIFIERS
.B %i or %d**:
The 'int' argument is converted to signed decimal notation.
.B%c**

The 'int' argument is converted to an 'unsigned char', and the character is writen.
.B%s:
Prints a string of characters.
.B%%*
Prints a literal '%' character.
**Note:**
The '_printf()' function does not support flags, field width,
presicion, or length modifiers.
RETURN VALUE
.RE Upon successful completion, '_printf()' returns the number of characters
printed (excluding the null byte used to end output to strings).
if an output error is encountered, a negative value is required.
.PP
.SH EXAMPLES
Example 1: Printing characters and strings**
'''c
_printf("character: %c\n", 'H');
_printf("string: %s\n", "Hello, world!");
'''
*Example 2: **Printing a percent sign**
'''c
_printf("percent: %%\n");
'''
*Example 3: Printing a integer sign**
'''c
_printf("integer: %i\n");
_printf("integer: %d\n");
'''
NOTES
RP
-The _printf()' function is a simplified version of the stadndard
-It does not handle floating-point numbers ('%f', '%e', '%g'),unsigned
integers ('%u'), octal numbers ('%o'), hexadecimal numbers ('%x', '%X'),
or pointer addresses ('%p').
-Since it does not support field width or precision, it cannot format
RE
numbers with leading zeros, spaces or align text withing a specified
width.
.PP
SEE ALSO
B. 'printf(3)', 'Putchar(3)', 'puts(3)', 'vprintf(3)'

.SH AUTHORS
.SS Alejandro Garcia and Kamila Sostre
